SET SERVEROUTPUT ON
WHENEVER SQLERROR CONTINUE

DECLARE
  v_sku        PRODUCTO.SKU%TYPE := 'SKU-001';
  v_id_prod    PRODUCTO.ID_PRODUCTO%TYPE;
  v_has_boleta NUMBER;
BEGIN
  -- Asegura 1 producto
  SELECT COUNT(*) INTO v_has_boleta FROM PRODUCTO WHERE SKU = v_sku;
  IF v_has_boleta = 0 THEN
    INSERT INTO PRODUCTO (SKU, NOMBRE, COSTO, PRECIO, ACTIVO, CREADO_POR, FECHA_CREACION)
    VALUES (v_sku, 'Producto Demo', 1000, 4995, 'S', USER, SYSTIMESTAMP);
  END IF;

  SELECT ID_PRODUCTO INTO v_id_prod FROM PRODUCTO WHERE SKU = v_sku FETCH FIRST 1 ROWS ONLY;

  -- Asegura una boleta PAGADA con totales simples
  SELECT COUNT(*) INTO v_has_boleta FROM BOLETA_VENTA WHERE ID_BOLETA = 1001;
  IF v_has_boleta = 0 THEN
    INSERT INTO BOLETA_VENTA (
      ID_BOLETA, NUMERO, FECHA, ID_USUARIO_VENDE, ID_CLIENTE,
      NETO, IVA, TOTAL, METODO_PAGO, ESTADO,
      FECHA_CREACION, CREADO_POR, INVENTARIO_IMPACTADO
    )
    VALUES (
      1001, '1001', SYSDATE, NULL, NULL,
      9990, 1900, 11890, 'EFECTIVO', 'PAGADA',
      SYSTIMESTAMP, USER, 'N'
    );
  END IF;

  -- Inserta 1 detalle (intenta sin ID_DETALLE; si falla, reintenta con MAX+1)
  BEGIN
    INSERT INTO BOLETA_VENTA_DETALLE (ID_BOLETA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO, DESCUENTO, SUBTOTAL)
    VALUES (1001, v_id_prod, 2, 4995, 0, 9990);
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE = -1400 THEN -- cannot insert NULL into ID_DETALLE
        DECLARE v_new_id NUMBER;
        BEGIN
          SELECT NVL(MAX(ID_DETALLE),0)+1 INTO v_new_id FROM BOLETA_VENTA_DETALLE;
          INSERT INTO BOLETA_VENTA_DETALLE (ID_DETALLE, ID_BOLETA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO, DESCUENTO, SUBTOTAL)
          VALUES (v_new_id, 1001, v_id_prod, 2, 4995, 0, 9990);
        END;
      ELSE
        RAISE;
      END IF;
  END;

  COMMIT;
  DBMS_OUTPUT.PUT_LINE('OK: datos de prueba insertados.');
END;
/
PROMPT == Refresh MV ==
BEGIN DBMS_MVIEW.REFRESH('MV_VENTAS_POR_PRODUCTO','C'); END;
/
PROMPT == Filas en MV ==
SELECT COUNT(*) AS FILAS FROM MV_VENTAS_POR_PRODUCTO;
PROMPT == Top 5 ==
SELECT * FROM MV_VENTAS_POR_PRODUCTO FETCH FIRST 5 ROWS ONLY;
